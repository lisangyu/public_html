<?php

// Include the config file to establish the database connection
include 'config.php';

// Set response header to return JSON
header('Content-Type: application/json');

// search.php
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Retrieve user input
    $protein_family = $_POST['protein-family'] ?? '';
    $taxonomy = $_POST['taxonomy'] ?? '';

    if (empty($protein_family) || empty($taxonomy)) {
        echo json_encode(["status" => "error", "message" => "Protein family and taxonomy are required"]);
        exit;
    }

    // Generate a unique search ID for this query
    $search_id = uniqid('search_', true);

    // Call backend scripts to fetch data and perform analysis
    // Fetch protein data
    $command = escapeshellcmd("bash fetch_protein_data.sh '$protein_family' '$taxonomy' '$search_id'");
    $output = shell_exec($command);

    // Ensure that the command ran successfully and data was fetched
    if (empty($output)) {
        echo json_encode(["status" => "error", "message" => "No protein data fetched"]);
        exit;
    }

    // Split protein_ids string into an array (assuming the protein accessions are in $output)
    $protein_ids_array = explode(" ", trim($output));

    try {
        // Start a database transaction
        $pdo->beginTransaction();

        // Read the FASTA file generated by the shell script
        $fasta_file = "protein_results/{$search_id}.fasta";

        if (!file_exists($fasta_file)) {
            throw new Exception("FASTA file not found");
        }

        $fasta_contents = file_get_contents($fasta_file);
        $fasta_sequences = explode("> ", $fasta_contents);

        // Prepare SQL statement
        $sql = "INSERT INTO protein_sequences (search_id, protein_id, fasta_sequence) VALUES (?, ?, ?)";
        $stmt = $pdo->prepare($sql);

        foreach ($protein_ids_array as $protein_id) {
            // Find the corresponding FASTA sequence for the protein ID
            $fasta_sequence = null;
            foreach ($fasta_sequences as $sequence) {
                if (strpos($sequence, $protein_id) !== false) {
                    $fasta_sequence = ">$sequence";
                    break;
                }
            }

            if ($fasta_sequence === null) {
                throw new Exception("No FASTA sequence found for protein ID: $protein_id");
            }

            // Execute the SQL query
            $stmt->execute([$search_id, $protein_id, $fasta_sequence]);
        }

        // Commit the transaction
        $pdo->commit();

        // Return JSON response with success status and search_id
        echo json_encode(["status" => "success", "search_id" => $search_id]);
    } catch (Exception $e) {
        // Rollback on error
        $pdo->rollBack();
        echo json_encode(["status" => "error", "message" => $e->getMessage()]);
    }
}
?>