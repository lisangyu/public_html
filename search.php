<?php

// Include the config file to establish the database connection
include 'config.php';

// search.php
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    // Retrieve user input
    $protein_family = $_POST['protein-family'];
    $taxonomy = $_POST['taxonomy'];

    // Generate a unique search ID for this query
    $search_id = uniqid('search_', true);

    // Call backend scripts to fetch data and perform analysis
    // Fetch protein data
    $command = escapeshellcmd("bash fetch_protein_data.sh '$protein_family' '$taxonomy' '$search_id'");
    $output = shell_exec($command);

    // Ensure that the command ran successfully and data was fetched
    if (empty($output)) {
        echo json_encode(["status" => "error", "message" => "No protein data fetched"]);
        exit;
    }

    // Split protein_ids string into an array (assuming the protein accessions are in $output)
    $protein_ids_array = explode(" ", trim($output));

    // Begin database transaction
    $conn->begin_transaction();

    // Read the FASTA file generated by the shell script
    $fasta_file = "protein_results/{$search_id}.fasta";
    $fasta_contents = file_get_contents($fasta_file);
    $fasta_sequences = explode("> ", $fasta_contents);

    // Loop through each protein ID and insert into database
    foreach ($protein_ids_array as $protein_id) {
        // Find the corresponding FASTA sequence for the protein ID
        $fasta_sequence = null;
        foreach ($fasta_sequences as $sequence) {
            if (strpos($sequence, $protein_id) !== false) {
                $fasta_sequence = ">$sequence";
                break;
            }
        }

        if ($fasta_sequence === null) {
            echo json_encode(["status" => "error", "message" => "No FASTA sequence found for protein ID: $protein_id"]);
            continue;
        }

        // Insert the protein_id and corresponding FASTA sequence into the database
        $sql = "INSERT INTO protein_sequences (search_id, protein_id, fasta_sequence) VALUES (?, ?, ?)";
        $stmt = $conn->prepare($sql);
        $stmt->bind_param("sss", $search_id, $protein_id, $fasta_sequence);

        if (!$stmt->execute()) {
            // Rollback if any insertion fails
            $conn->rollback();
            echo json_encode(["status" => "error", "message" => "Error inserting protein data: " . $stmt->error]);
            // Close the prepared statement and database connection
            $stmt->close();
            $conn->close();
            exit;
        }
    }

    // Commit the transaction if everything is successful
    $conn->commit();

    // Close the prepared statement and database connection
    $stmt->close();
    $conn->close();

    // Return json response with success status and search_id
    echo json_encode(["status" => "success", "search_id" => $search_id]);
    exit;
}
?>